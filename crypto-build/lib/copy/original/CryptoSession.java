// Automatically generated by flapigen
package com.freelife.crypto.core;


public final class CryptoSession {

    public CryptoSession(String path) throws Exception {
        mNativeObj = init(path);
    }
    private static native long init(String path) throws Exception;

    public CryptoSession(byte [] bytes) throws Exception {
        mNativeObj = init(bytes);
    }
    private static native long init(byte [] bytes) throws Exception;

    public CryptoSession(String aws_kms_key, String access_key_id, String secret_access_key, String seed, String credential) throws Exception {
        mNativeObj = init(aws_kms_key, access_key_id, secret_access_key, seed, credential);
    }
    private static native long init(String aws_kms_key, String access_key_id, String secret_access_key, String seed, String credential) throws Exception;

    public final String encrypt(String plaintext) throws Exception {
        String ret = do_encrypt(mNativeObj, plaintext);

        return ret;
    }
    private static native String do_encrypt(long self, String plaintext) throws Exception;

    public final String decrypt(String encrypted) throws Exception {
        String ret = do_decrypt(mNativeObj, encrypted);

        return ret;
    }
    private static native String do_decrypt(long self, String encrypted) throws Exception;

    public synchronized void delete() {
        if (mNativeObj != 0) {
            do_delete(mNativeObj);
            mNativeObj = 0;
       }
    }
    @Override
    protected void finalize() throws Throwable {
        try {
            delete();
        }
        finally {
             super.finalize();
        }
    }
    private static native void do_delete(long me);
    /*package*/ CryptoSession(InternalPointerMarker marker, long ptr) {
        assert marker == InternalPointerMarker.RAW_PTR;
        this.mNativeObj = ptr;
    }
    /*package*/ long mNativeObj;

        static {
            try {
                NativeUtils.loadLibraryFromJar();
            } catch (java.io.IOException e) {
                e.printStackTrace();
            }
        }}